apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.testng:testng:6.14.2'
    compile 'org.seleniumhq.selenium:selenium-java:3.10.0'
    compile 'org.hamcrest:java-hamcrest:2.0.0.0'
    compile 'com.beust:jcommander:1.48'
    compile 'com.thoughtworks.xstream:xstream:1.4.8'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'ch.qos.logback:logback-classic:1.3.0-alpha4'
    compile 'mysql:mysql-connector-java:5.1.38'
}

task testGroups(type: Test) {
    useTestNG {
        // указываем, какой файл с тестовым набором нужно использовать;
        // его можно запустить потом в командной строке с помощью команд:
        // gradlew testGroups - если запускаем первично
        // gradlew cleanTest testGroups - если хотим запустить повторно ранее успешно выполненные тесты
        suites 'src/test/resources/testng-groups.xml'
    }
    // чтобы передать имя браузера нужно в командной строке указать параметр gradlew -Pbrowser=firefox testGroups
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    // передаем через параметр target имя файла, в котором лежат все конфигурационные настройки
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}

task testContacts(type: Test) {
    useTestNG {
        // указываем, какой файл с тестовым набором нужно использовать;
        // его можно запустить потом в командной строке с помощью команд:
        // gradlew testContacts - если запускаем первично
        // gradlew cleanTest testContacts - если хотим запустить повторно ранее успешно выполненные тесты
        suites 'src/test/resources/testng-contacts.xml'
    }
    // чтобы передать имя браузера нужно в командной строке указать параметр gradlew -Pbrowser=firefox testContacts
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    // передаем через параметр target имя файла, в котором лежат все конфигурационные настройки
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
}